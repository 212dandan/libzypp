#include <iostream>
#include <list>
#include <vector>
#include <string>
#include <iterator>

#include <zypp/base/Logger.h>
#include <zypp/base/Exception.h>
#include <zypp/base/String.h>
#include <zypp/base/PtrTypes.h>

#include <zypp/source/susetags/PackagesParser.h>

using std::endl;

///////////////////////////////////////////////////////////////////
namespace zypp
{ /////////////////////////////////////////////////////////////////
  ////////////////////////////////////////////////////////////////////////////
  //
  //  Just for the stats
  //
  ////////////////////////////////////////////////////////////////////////////
  struct Measure
  {
    time_t _begin;
    Measure()
    : _begin( time(NULL) )
    {
      USR << "START MEASURE..." << endl;
    }
    ~Measure()
    {
      USR << "DURATION: " << (time(NULL)-_begin) << " sec." << endl;
    }
  };
  ////////////////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////
  namespace parser
  { /////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////
    namespace tagfile
    { /////////////////////////////////////////////////////////////////





      /////////////////////////////////////////////////////////////////
    } // namespace tagfile
    ///////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////
  } // namespace parser
  ///////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////
} // namespace zypp
///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
//
//  Types
//
////////////////////////////////////////////////////////////////////////////

using namespace zypp;
using namespace std;

////////////////////////////////////////////////////////////////////////////
//
//  Main
//
////////////////////////////////////////////////////////////////////////////
int main( int argc, char* argv[] )
{
  INT << "===[START]==========================================" << endl;
  string infile( "p" );
  if (argc >= 2 )
    infile = argv[1];

  try
    {
      std::list<Package::Ptr> result( source::susetags::parsePackages( infile ) );
      SEC << result.size() << endl;
    }
  catch( Exception & excpt )
    {
      ZYPP_RETHROW( excpt );
    }

  INT << "===[END]============================================" << endl;
  return 0;
}
