/*---------------------------------------------------------------------\
|                          ____ _   __ __ ___                          |
|                         |__  / \ / / . \ . \                         |
|                           / / \ V /|  _/  _/                         |
|                          / /__ | | | | | |                           |
|                         /_____||_| |_| |_|                           |
|                                                                      |
\---------------------------------------------------------------------*/
/** \file	zypp/parser/tagfile/Tags.cc
 *
*/
#include <iostream>
//#include "zypp/base/Logger.h"

#include "zypp/parser/tagfile/Tags.h"

using std::endl;

///////////////////////////////////////////////////////////////////
namespace zypp
{ /////////////////////////////////////////////////////////////////
  ///////////////////////////////////////////////////////////////////
  namespace parser
  { /////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////
    namespace tagfile
    { /////////////////////////////////////////////////////////////////

      std::ostream & operator<<( std::ostream & str, const Range & obj )
      {
        return str << '[' << obj.start << ':' << obj.length << ']';
      }

      std::ostream & operator<<( std::ostream & str, const Tag & obj )
      {
        return str << obj.range << '(' << obj.ident << '.' << obj.ext << ')';
      }

      std::ostream & operator<<( std::ostream & str, const STag & obj )
      {
        return str << obj.stag << std::endl
                   << obj.data << '(' << obj.value << ')';
      }

      std::ostream & operator<<( std::ostream & str, const MTag & obj )
      {
        return str << obj.stag << '-' << obj.etag << std::endl
                   << obj.data << '(' << obj.value.size() << ')';
      }

      /////////////////////////////////////////////////////////////////
    } // namespace tagfile
    ///////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////
  } // namespace parser
  ///////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////////////////
} // namespace zypp
///////////////////////////////////////////////////////////////////
